package ru.cultserv.adv.yandex.direct.v5.models.campain;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.joda.time.LocalDate;
import ru.cultserv.adv.yandex.direct.v5.models.Currency;
import ru.cultserv.adv.yandex.direct.v5.models.util.ExtendedStatus;
import ru.cultserv.adv.yandex.direct.v5.models.util.StatusBoolean;

public class CampaignShortInfo {

	/**
	 * Идентификатор кампании.
	 * Для создания кампании задают 0, для изменения параметров существующей кампании указывают ее идентификатор.
	 */
	@JsonProperty("CampaignID")
	public Long campaign_id;
	
	/**
	 * Логин владельца кампании (логин пользователя Яндекса, в пользу которого ведется рекламная кампания).
	 * При создании кампании прямые рекламодатели указывают собственный логин в Яндексе,
	 * рекламные агентства — логин своего клиента. Впоследствии логин для кампании не меняется.
	 */
	@JsonProperty("Login")
	public String login;
	
	/**
	 * Название кампании.
	 */
	@JsonProperty("Name")
	public String name;
	
	/**
	 * Начало показа объявлений, YYYY-MM-DD. Если не задана, используется дата создания кампании.
	 * Дата может находиться в будущем. В этом случае показ объявлений начинается при наступлении указанной даты,
	 * если модератор одобрил объявления и внесены средства на баланс кампании.
	 */
	@JsonProperty("StartDate")
	public LocalDate start_date;
	
	/**
	 * Стратегия на поиске. http://api.yandex.ru/direct/doc/concepts/strategy.xml
	 */
	@JsonProperty("StrategyName")
	public CampaignStrategyName strategy_name;
	
	/**
	 * Стратегия в Рекламной сети Яндекса. http://api.yandex.ru/direct/doc/concepts/strategy.xml
	 */
	@JsonProperty("ContextStrategyName")
	public CampaignContextStrategyName context_strategy_name;
	
	/**
	 * Если у клиента подключен общий счет — сумма израсходованных средств за все время существования кампании.
	 * Если общий счет не подключен — сумма средств, зачисленных на баланс кампании за время ее существования.
	 * Значение выражено в у. е.
	 * Если кампания ведется в реальной валюте, возвращаемое значение конвертируется из валюты кампании в у. е. и
	 * округляется по математическим правилам с точностью до второго знака после запятой.
	 */
	@JsonProperty("Sum")
	public Float sum;
	
	/**
	 * Текущий баланс общего счета + сумма возврата на кампанию (если у рекламодателя подключен общий счет)
	 * или текущий баланс кампании (если общий счет не подключен).
	 * 
	 * Примечание. Сумма возврата средств за клики, признанные системой недобросовестными или ошибочными,
	 * может быть израсходована только в рамках этой же кампании.
	 * 
	 * Значение выражено в у. е.
	 * Если кампания ведется в реальной валюте, возвращаемое значение конвертируется из валюты кампании в у. е. и
	 * округляется по математическим правилам с точностью до второго знака после запятой.
	 */
	@JsonProperty("Rest")
	public Float rest;
	
	/**
	 * Сумма, доступная для перевода с помощью метода TransferMoney.
	 * Возвращается только в случае, если общий счет не подключен. Может быть меньше баланса кампании.
	 * 
	 * Значение выражено в у. е.
	 * Если кампания ведется в реальной валюте, возвращаемое значение конвертируется из валюты кампании в у. е. и
	 * округляется по математическим правилам с точностью до второго знака после запятой. 
	 */
	@JsonProperty("SumAvailableForTransfer")
	public Float sum_available_for_transfer;
	
	/**
	 * Количество показов за время существования кампании.
	 */
	@JsonProperty("Shows")
	public Long shows;
	
	/**
	 * Количество кликов за время существования кампании.
	 */
	@JsonProperty("Clicks")
	public Long clicks;
	
	/**
	 * Статус кампании, например: «Идут показы», «Ожидает оплаты», «На модерации», «Остановлена»,
	 * «Идут показы. Идет активизация», «Кампания заархивирована» и другие.
	 */
	@JsonProperty("Status")
	public String status;
	
	/**
	 * Показ объявлений кампании включен — Yes/No.
	 * Включение и выключение выполняется методами StopCampaign и ResumeCampaign.
	 * 
	 * Разрешение показа на уровне кампании не означает, что объявления фактически показываются.
	 * Для этого необходимо выполнение и других условий: достаточный баланс средств, кампания и
	 * объявления проверены модератором, разрешен показ на уровне объявлений (метод ResumeBanners).
	 * Фактическому показу соответствует значение Yes в параметре IsActive.
	 */
	@JsonProperty("StatusShow")
	public StatusBoolean status_show;
	
	/**
	 * Состояние архивации кампании.
	 * 
	 * <li>Yes — кампания помещена в архив;
	 * <li>No — кампания не в архиве;
	 * <li>Pending — происходит перенос кампании в архив либо возврат из архива;
	 * <li>CurrencyConverted — кампания автоматически заархивирована при переходе клиента на работу в валюте
	 * и не может быть разархивирована.
	 * 
	 * <p>
	 * Перенос в архив выполняют с помощью метода ArchiveCampaign.
	 * Для возврата из архива служит метод UnArchiveCampaign.
	 */
	@JsonProperty("StatusArchive")
	public ExtendedStatus status_archive;
	
	/**
	 * Состояние активизации кампании:
	 * <li>Yes — активизирована;
	 * <li>Pending — ожидается активизация.
	 */
	@JsonProperty("StatusActivating")
	public ExtendedStatus status_activating;
	
	/**
	 * Результат проверки модератором:
	 * <li>Yes — модератор одобрил хотя бы одно объявление;
	 * <li>No — модератор отклонил все объявления;
	 * <li>New — объявления не отправлялись на проверку (статус кампании «Черновик»);
	 * <li>Pending — проводится проверка.
	 * 
	 * <p>Для отправки на проверку служит метод ModerateBanners
	 */
	@JsonProperty("StatusModerate")
	public ExtendedStatus status_moderate;
	
	/**
	 * Кампания активна, объявления показываются — Yes/No.
	 * 
	 * Под активностью понимается состояние кампании, при котором показ объявлений включается
	 * и выключается автоматически — в соответствии с настройками временного таргетинга
	 * или в зависимости от баланса кампании. Неактивность кампании означает, что показ объявлений заблокирован
	 * и не может быть включен автоматически.
	 */
	@JsonProperty("IsActive")
	public StatusBoolean is_active;
	
	/**
	 * Имя персонального менеджера в Яндексе.
	 * Заполняется автоматически для кампаний, обслуживаемых персональным менеджером.
	 */
	@JsonProperty("ManagerName")
	public String manager_name;
	
	@JsonProperty("AgencyName")
	public String agency_name;
	
	/**
	 * Валюта, в которой ведется кампания.
	 * Возможные значения: RUB, CHF, EUR, KZT, TRY, UAH, USD.
	 * Если параметр отсутствует или равен NULL, это означает, что кампания ведется в у. е.
	 */
	@JsonProperty("CampaignCurrency")
	public Currency campaign_currency;
	
	/**
	 * Идентификатор исходной кампании в у. е., если текущая кампания была создана автоматически
	 * при переходе клиента на работу в валюту (см. раздел Процедура перехода).
	 * Отсутствует или равен NULL — в противном случае.
	 */
	@JsonProperty("SourceCampaignID")
	public Long source_campaign_id;
	
	/**
	 * Доступна ли настройка дневного бюджета кампании — Yes/No.
	 */
	@JsonProperty("DayBudgetEnabled")
	public StatusBoolean day_budget_enabled;
	
	public boolean isArchived() {
		return status_archive != ExtendedStatus.No;
	}

}
